(window.webpackJsonp=window.webpackJsonp||[]).push([[53],{590:function(t,s,a){"use strict";a.r(s);var e=a(5),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("blockquote",[a("p",[t._v("找到程序里的所有失败是一个不可判定的问题。")])]),t._v(" "),a("h2",{attrs:{id:"concepts"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#concepts"}},[t._v("#")]),t._v(" Concepts")]),t._v(" "),a("h3",{attrs:{id:"fault-error-failure"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#fault-error-failure"}},[t._v("#")]),t._v(" Fault, Error & Failure")]),t._v(" "),a("p",[t._v("看一段用于计算一个数组平均值的代码：")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CSta")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" numbers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" length "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" numbers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n     "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" mean"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" sum"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n     sum "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// i=0")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          sum "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" numbers "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n     mean "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" sum "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("println "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mean: "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" mean"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br")])]),a("p",[a("strong",[t._v("Fault")])]),t._v(" "),a("p",[t._v("软件故障：A "),a("u",[t._v("static")]),t._v(" defect in the software.  此处，整个静态的部分都为Fault(Bug)。")]),t._v(" "),a("p",[a("strong",[t._v("Error")])]),t._v(" "),a("p",[t._v("软件错误：An incorrect "),a("u",[t._v("internal state")]),t._v(" that is the manifestation of some fault. 当我们进行输入时，内部值 "),a("code",[t._v("sum")]),t._v(" 从第二项开始累加，此处为Error。")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Test")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Input")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Sum")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Sum")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// error")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[a("strong",[t._v("Failure")])]),t._v(" "),a("p",[t._v("软件失败："),a("u",[t._v("External, incorrect")]),t._v(" "),a("mark",[t._v("behavior")]),t._v(" with respect to the requirement or other description of the expected behavior. 当我们进行测试时，返回了不正确的输出值。此处为Failure(Bug)。")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Test")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Input")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" \nmean"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("\nmean"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Failure")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[a("strong",[t._v("Bug")])]),t._v(" "),a("p",[t._v("informal term for fault/failure.")]),t._v(" "),a("h3",{attrs:{id:"pie-model"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pie-model"}},[t._v("#")]),t._v(" PIE Model")]),t._v(" "),a("p",[t._v("为了揭示失败(Failure)，测试用例必须满足PIE模型。即到达程序中包含故障的位置（可达性），被执行后造成不正确的程序状态（影响），被影响的部分传播到其他部分，进而导致不正确的输出或者是错误的程序最终状态（传播）。")]),t._v(" "),a("p",[a("strong",[t._v("Execution/Reachability:")]),t._v(" The location or locations in the program that contain the fault must be reached.")]),t._v(" "),a("p",[a("strong",[t._v("Infection:")]),t._v(" The state of the program must be incorrect.")]),t._v(" "),a("p",[a("strong",[t._v("Propagation:")]),t._v(" The infected state must propagate to cause some output of the program to be incorrect.")]),t._v(" "),a("blockquote",[a("p",[t._v("当程序员忘记写部分代码（也称代码缺失故障）时，PIE模型依然适用：当测试执行到代码缺失的地方时，程序计数器——作为程序状态的一部分，必定会包含错误的数值。")])]),t._v(" "),a("h3",{attrs:{id:"test-oracle"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#test-oracle"}},[t._v("#")]),t._v(" Test Oracle")]),t._v(" "),a("p",[t._v("Test oracle (or just oracle) is "),a("strong",[t._v("a mechanism for determining whether a test has passed or failed")]),t._v(".")]),t._v(" "),a("blockquote",[a("p",[t._v("Hardest problem in auto-testing: test oracle generation.")])]),t._v(" "),a("p",[t._v("A test oracle might specify correct output for all possible input or only for specific input. It might not specify actual output values but only constraints on them.")]),t._v(" "),a("p",[t._v("The oracle might be:")]),t._v(" "),a("ul",[a("li",[t._v("a program (separate from the system under test) which takes the same input and produces the same output")]),t._v(" "),a("li",[t._v("documentation that gives specific correct outputs for specific given inputs")]),t._v(" "),a("li",[t._v("a documented algorithm that a human could use to calculate correct outputs for given inputs")]),t._v(" "),a("li",[t._v("a human domain expert who can somehow look at the output and tell whether it is correct")]),t._v(" "),a("li",[t._v("or any other way of telling that output is correct.")])]),t._v(" "),a("h3",{attrs:{id:"test-fixture"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#test-fixture"}},[t._v("#")]),t._v(" Test Fixture")]),t._v(" "),a("p",[t._v("A fixed state of the software under test used as a baseline for running tests; also known as the test context, e.g.")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("Loading a database with a specific, known set of data.")])]),t._v(" "),a("li",[a("p",[t._v("Preparation of input data and set-up/creation of fake or mock objects.")])])]),t._v(" "),a("h3",{attrs:{id:"testing-vs-debugging"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#testing-vs-debugging"}},[t._v("#")]),t._v(" Testing vs. Debugging")]),t._v(" "),a("p",[t._v("Testing(测试) is to "),a("u",[t._v("reveal")]),t._v(" a bug "),a("em",[t._v("by executing test and observing failure.")])]),t._v(" "),a("p",[t._v("Debugging(调试) is to "),a("u",[t._v("fix")]),t._v(" a bug"),a("em",[t._v("by locating, understanding and correcting fault.")])]),t._v(" "),a("h3",{attrs:{id:"verification-vs-validation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#verification-vs-validation"}},[t._v("#")]),t._v(" Verification vs. Validation")]),t._v(" "),a("p",[a("strong",[t._v("Validation")])]),t._v(" "),a("p",[a("em",[t._v("The assurance that a product, service, or system meets the needs of the customer and other identified stakeholders. It often involves acceptance and suitability with external customers.”")])]),t._v(" "),a("blockquote",[a("p",[a("em",[t._v("“")]),t._v(" Are we building the right product?”")])]),t._v(" "),a("p",[a("strong",[t._v("Verification")])]),t._v(" "),a("p",[a("em",[t._v("“The evaluation of whether or not a product, service, or system complies with a regulation, requirement, specification, or imposed condition. It is often an internal process.”")])]),t._v(" "),a("blockquote",[a("p",[t._v("“Are we building the product right?”")])]),t._v(" "),a("h3",{attrs:{id:"static-testing-vs-dynamic-testing"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#static-testing-vs-dynamic-testing"}},[t._v("#")]),t._v(" Static Testing vs. Dynamic Testing")]),t._v(" "),a("p",[a("strong",[t._v("Static testing")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("Static testing is about the prevention of defects.")])]),t._v(" "),a("li",[a("p",[t._v("Static testing does the "),a("u",[t._v("verification")]),t._v(" process.")])]),t._v(" "),a("li",[a("p",[t._v("Static testing is performed before compilation.")])])]),t._v(" "),a("p",[a("strong",[t._v("Dynamic testing")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("Dynamic testing is about finding and fixing the defects.")])]),t._v(" "),a("li",[a("p",[t._v("Dynamic testing does the "),a("u",[t._v("validation")]),t._v(" process.")])]),t._v(" "),a("li",[a("p",[t._v("Dynamic testing is performed after compilation.")])])]),t._v(" "),a("p",[a("img",{attrs:{src:"/images/how-to-improve-software-quality-using-a-static-testing-techniques-2.jpg.webp",alt:""}})]),t._v(" "),a("h3",{attrs:{id:"v-model"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#v-model"}},[t._v("#")]),t._v(" V-Model")]),t._v(" "),a("p",[a("img",{attrs:{src:"/images/V-Model-1.png",alt:""}})]),t._v(" "),a("h2",{attrs:{id:"unit-testing"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#unit-testing"}},[t._v("#")]),t._v(" Unit Testing")]),t._v(" "),a("p",[t._v("Unit testing is testing of an basic module of the software. Such as a function, a class, a component.")]),t._v(" "),a("p",[t._v("Typical problems revealed: Local data structures, Algorithms, Boundary conditions, Error handling.")]),t._v(" "),a("h3",{attrs:{id:"how-to-do-unit-testing"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#how-to-do-unit-testing"}},[t._v("#")]),t._v(" How to Do Unit Testing")]),t._v(" "),a("p",[a("strong",[t._v("Build systems in layers")]),t._v(". Start with classes that don’t depend on others. Continue testing building on already tested classes.")])])}),[],!1,null,null,null);s.default=n.exports}}]);